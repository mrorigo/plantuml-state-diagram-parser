state_diagram = { SOI ~ (  directive | state_data | state_declaration | transition | state_note | newline )* ~ EOI }
directive = { "@startuml" | "@enduml" | "skinparam" | "style" | "scale" | "hide" | entry_action | exit_action }
state_data = { ":" ~ identifier ~ "=" ~ string}
state_declaration = { "state" ~ (string ~ ("as" ~ identifier)?) ~ attributes? ~ state_block? }
state_block = { "{" ~ ( directive | state_data | state_declaration | transition | state_note | newline )* ~ "}" }
tr_arrow = { ("-" ~ ("-" | "down-" | "up-" )? ~ ">") }
entry_action = { ("entry" ~ string) }
exit_action = { "exit" ~ string }
transition = { from_state ~ tr_arrow ~ to_state ~ event? }
state_note = { identifier ~ ":" ~ string }
attributes = { "#" ~ color ~ line_style? ~ text_style? }
color = { HEX_COLOR | COLOR_NAME }
line_style = { "line" ~ (":" ~ LINE_STYLE)? }
text_style = { "text" ~ (":" ~ TEXT_STYLE)? }
from_state = @{ "[*]" | ASCII_ALPHANUMERIC ~ ("_" | ASCII_ALPHANUMERIC)* }
to_state = @{ "[*]" | ASCII_ALPHANUMERIC ~ ("_" | ASCII_ALPHANUMERIC)* }
identifier = @{ "[*]" | ASCII_ALPHANUMERIC ~ ("_" | ASCII_ALPHANUMERIC)* }
event = { (":" ~ " "?) ~ comma_separated_strings }
string = @{ QUOTED_STRING | PLAIN_STRING }
comma_separated_strings = { string ~  ("," ~ " "? ~ string)* }
newline = { NEWLINE }
HEX_COLOR = @{ "#" ~ ASCII_HEX_DIGIT{6} }
COLOR_NAME = @{ 'a'..'z'+  }
LINE_STYLE = @{ "bold" | "dashed" | "dotted" }
TEXT_STYLE = @{ "bold" | "italic" | "underline" }
QUOTED_STRING = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
PLAIN_STRING = @{ (!WHITESPACE ~ ANY)+ }
ASCII_ALPHANUMERIC = @{ 'a'..'z' | 'A'..'Z' | '0'..'9' }
ASCII_HEX_DIGIT = @{ '0'..'9' | 'a'..'f' | 'A'..'F' }
NEWLINE = @{ "\n" }
WHITESPACE = _{ " " | "\t" | NEWLINE }
